@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link text-white" href="#" id="accountDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false" data-bs-placement="bottom-end">
                <span class="d-none d-sm-inline">
                    <i class='bx bxs-user-circle'></i>
                </span>
                <span class="d-inline d-sm-none dropdown-toggle">
                    My Account
                </span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end bg-primary" aria-labelledby="accountDropdown">
                <li>
                    <a id="manage" class="dropdown-item text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                        Manage
                    </a>
                </li>
                <li>
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="dropdown-item text-white">Logout</button>
                    </form>
                </li>
            </ul>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
